{"ast":null,"code":"var _jsxFileName = \"/Users/mcn4virginia.edu/Desktop/employee-directory/src/App.js\",\n    _s = $RefreshSig$();\n\n// import './App.css';\nimport React, { useMemo, useState, useEffect } from \"react\"; // import Table from \"./Table\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const columns = useMemo(() => [{\n    Header: \"Image\",\n    accessor: \"employee.picture.thumbnail\"\n  }, {\n    Header: \"Name\",\n    accessor: \"employee.name\"\n  }, {\n    Header: \"Age\",\n    accessor: \"employee.age\"\n  }, {\n    Header: \"Contact\",\n    accessor: \"employee.email\"\n  }, {\n    Header: \"Location\",\n    accessor: \"employee.location.city\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n} //*************For Cell Styling**************** */\n//Place above App()\n// Custom component to render Genres \n//const Genres = ({ values }) => {\n// Loop through the array and create a badge-like component instead of a comma-separated string\n// return (\n//   <>\n//     {values.map((genre, idx) => {\n//       return (\n//         <span key={idx} className=\"badge\">\n//           {genre}\n//         </span>\n//       );\n//     })}\n//   </>\n// );\n// };\n// Cell method will provide the cell value; we pass it to render a custom component \n// place this in useMemo array\n//Cell: ({ cell: { value } }) => <Genres values={value} />\n\n\n_s(App, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mcn4virginia.edu/Desktop/employee-directory/src/App.js"],"names":["React","useMemo","useState","useEffect","App","columns","Header","accessor","data"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAGX,QAAMC,OAAO,GAAGJ,OAAO,CACrB,MAAM,CACJ;AACEK,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,EASJ;AACED,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GATI,EAaJ;AACED,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAbI,EAiBJ;AACED,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAjBI,CADe,CAAvB;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEF,OAAhB;AAAyB,MAAA,IAAI,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;AACA;AACA;AACF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAES;AACA;AACA;;;GAtDAJ,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["// import './App.css';\n\nimport React, { useMemo, useState, useEffect } from \"react\";\n// import Table from \"./Table\"\n\nfunction App() {\n  \n   \n    const columns = useMemo(\n      () => [\n        {\n          Header: \"Image\",\n          accessor: \"employee.picture.thumbnail\"\n        },\n        {\n          Header: \"Name\",\n          accessor: \"employee.name\"\n        },\n        {\n          Header: \"Age\",\n          accessor: \"employee.age\"\n        },\n        {\n          Header: \"Contact\",\n          accessor: \"employee.email\"\n        },\n        {\n          Header: \"Location\",\n          accessor: \"employee.location.city\"\n        },\n      ]\n    );\n    return (\n      <div className=\"App\">\n        <Table columns={columns} data={data} />\n      </div>\n    );\n  }\n\n  //*************For Cell Styling**************** */\n  //Place above App()\n  // Custom component to render Genres \n//const Genres = ({ values }) => {\n  // Loop through the array and create a badge-like component instead of a comma-separated string\n  // return (\n  //   <>\n  //     {values.map((genre, idx) => {\n  //       return (\n  //         <span key={idx} className=\"badge\">\n  //           {genre}\n  //         </span>\n  //       );\n  //     })}\n  //   </>\n  // );\n// };\n\n         // Cell method will provide the cell value; we pass it to render a custom component \n         // place this in useMemo array\n         //Cell: ({ cell: { value } }) => <Genres values={value} />\n    \n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}