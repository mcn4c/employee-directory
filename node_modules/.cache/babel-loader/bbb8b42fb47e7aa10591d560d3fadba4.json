{"ast":null,"code":"var _jsxFileName = \"/Users/mcn4virginia.edu/Desktop/employee-directory/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Table from './components/Table';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]); // Using useEffect to call the API once mounted and set the data\n\n  useEffect(() => {\n    (async () => {\n      const result = await axios('https://randomuser.me/api/?results=15');\n      setData(result.data);\n    })();\n  }, []);\n  const columns = useMemo(() => [// {\n  // \tHeader: 'Image',\n  // \taccessor: 'picture.thumbnail'\n  // },\n  {\n    Header: 'Name',\n    accessor: ['name.last', 'name.first']\n  }, {\n    Header: 'Age',\n    accessor: 'dob.age'\n  }, {\n    Header: 'Contact',\n    accessor: 'email'\n  }, {\n    Header: 'Location',\n    accessor: 'location.city'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n} //*************For Cell Styling**************** */\n//Place above App()\n// Custom component to render Genres\n//const Genres = ({ values }) => {\n// Loop through the array and create a badge-like component instead of a comma-separated string\n// return (\n//   <>\n//     {values.map((genre, idx) => {\n//       return (\n//         <span key={idx} className=\"badge\">\n//           {genre}\n//         </span>\n//       );\n//     })}\n//   </>\n// );\n// };\n// Cell method will provide the cell value; we pass it to render a custom component\n// place this in useMemo array\n//Cell: ({ cell: { value } }) => <Genres values={value} />\n\n\n_s(App, \"abY7OPLAfhkxfskV7RGFCXxkjQM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mcn4virginia.edu/Desktop/employee-directory/src/App.js"],"names":["React","useState","useEffect","useMemo","Table","axios","App","data","setData","result","columns","Header","accessor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CADc,CAGd;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,KAAC,YAAY;AACZ,YAAMO,MAAM,GAAG,MAAMJ,KAAK,CAAC,uCAAD,CAA1B;AACAG,MAAAA,OAAO,CAACC,MAAM,CAACF,IAAR,CAAP;AACA,KAHD;AAIA,GALQ,EAKN,EALM,CAAT;AAMA,QAAMG,OAAO,GAAGP,OAAO,CAAC,MAAM,CAC7B;AACA;AACA;AACA;AACA;AACCQ,IAAAA,MAAM,EAAE,MADT;AAECC,IAAAA,QAAQ,EAAE,CAAE,WAAF,EAAe,YAAf;AAFX,GAL6B,EAS7B;AACCD,IAAAA,MAAM,EAAE,KADT;AAECC,IAAAA,QAAQ,EAAE;AAFX,GAT6B,EAa7B;AACCD,IAAAA,MAAM,EAAE,SADT;AAECC,IAAAA,QAAQ,EAAE;AAFX,GAb6B,EAiB7B;AACCD,IAAAA,MAAM,EAAE,UADT;AAECC,IAAAA,QAAQ,EAAE;AAFX,GAjB6B,CAAP,CAAvB;AAsBA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEF,OAAhB;AAAyB,MAAA,IAAI,EAAEH;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;GA3DSD,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport Table from './components/Table';\nimport axios from 'axios';\n\nfunction App() {\n\tconst [ data, setData ] = useState([]);\n\n\t// Using useEffect to call the API once mounted and set the data\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tconst result = await axios('https://randomuser.me/api/?results=15');\n\t\t\tsetData(result.data);\n\t\t})();\n\t}, []);\n\tconst columns = useMemo(() => [\n\t\t// {\n\t\t// \tHeader: 'Image',\n\t\t// \taccessor: 'picture.thumbnail'\n\t\t// },\n\t\t{\n\t\t\tHeader: 'Name',\n\t\t\taccessor: [ 'name.last', 'name.first' ]\n\t\t},\n\t\t{\n\t\t\tHeader: 'Age',\n\t\t\taccessor: 'dob.age'\n\t\t},\n\t\t{\n\t\t\tHeader: 'Contact',\n\t\t\taccessor: 'email'\n\t\t},\n\t\t{\n\t\t\tHeader: 'Location',\n\t\t\taccessor: 'location.city'\n\t\t}\n\t]);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Table columns={columns} data={data} />\n\t\t</div>\n\t);\n}\n\n//*************For Cell Styling**************** */\n//Place above App()\n// Custom component to render Genres\n//const Genres = ({ values }) => {\n// Loop through the array and create a badge-like component instead of a comma-separated string\n// return (\n//   <>\n//     {values.map((genre, idx) => {\n//       return (\n//         <span key={idx} className=\"badge\">\n//           {genre}\n//         </span>\n//       );\n//     })}\n//   </>\n// );\n// };\n\n// Cell method will provide the cell value; we pass it to render a custom component\n// place this in useMemo array\n//Cell: ({ cell: { value } }) => <Genres values={value} />\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}